{"ast":null,"code":"import React,{useEffect,useRef,useState}from'react';import'./FanWidget.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function FanWidget(_ref){let{status,percent}=_ref;const[rotation,setRotation]=useState(0);const speedRef=useRef(360);// Full speed in degrees per second\nconst requestRef=useRef();// We use useRef for persisting new values\nconst prevTimeref=useRef();const statusRef=useRef(status);// We update statusRef and reset speed when fan turns on.\nuseEffect(()=>{statusRef.current=status;if(status==='on'){speedRef.current=360;}},[status]);// animation logic\nconst animate=time=>{if(prevTimeref.current!=null){const deltaTime=time-prevTimeref.current;//We update rotation based on the current speed.\nsetRotation(prevRotation=>(prevRotation+speedRef.current*(deltaTime/1000))%360);// for gradually deceleration when fan turns off when reduce it gradually by a factor of 0.98 and then we make it as 0 when speed is less than 1\nif(statusRef.current==='off'){speedRef.current=speedRef.current*0.98;if(speedRef.current<1){speedRef.current=0;}}}//setting the new times\nprevTimeref.current=time;requestRef.current=requestAnimationFrame(animate);};// Start the animation loop once on initialization.\nuseEffect(()=>{requestRef.current=requestAnimationFrame(animate);return()=>cancelAnimationFrame(requestRef.current);},[]);return/*#__PURE__*/_jsxs(\"div\",{className:\"fan-comp\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"fan-title\",children:\"Fan Status\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"fan-data\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"fan\",style:{transform:`rotate(${rotation}deg)`}// for animation\n,children:/*#__PURE__*/_jsxs(\"svg\",{width:\"120\",height:\"120\",viewBox:\"0 0 120 120\",children:[/*#__PURE__*/_jsx(\"circle\",{cx:\"60\",cy:\"60\",r:\"55\",stroke:\"#333\",strokeWidth:\"4\",fill:\"none\"}),/*#__PURE__*/_jsxs(\"g\",{fill:\"#ccc\",stroke:\"#333\",strokeWidth:\"1\",children:[/*#__PURE__*/_jsx(\"g\",{id:\"blade\",children:/*#__PURE__*/_jsx(\"path\",{d:\"M60,60 L60,20 A20,20 0 0,1 80,40 Z\"})}),/*#__PURE__*/_jsx(\"use\",{href:\"#blade\",transform:\"rotate(0,60,60)\"}),/*#__PURE__*/_jsx(\"use\",{href:\"#blade\",transform:\"rotate(90,60,60)\"}),/*#__PURE__*/_jsx(\"use\",{href:\"#blade\",transform:\"rotate(180,60,60)\"}),/*#__PURE__*/_jsx(\"use\",{href:\"#blade\",transform:\"rotate(270,60,60)\"})]}),/*#__PURE__*/_jsx(\"circle\",{cx:\"60\",cy:\"60\",r:\"5\",fill:\"#333\"})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"fan-state\",children:status.toUpperCase()}),/*#__PURE__*/_jsxs(\"div\",{className:\"fan-percent\",children:[\"Usage: \",percent,\"%\"]})]}),/*#__PURE__*/_jsx(\"div\",{style:{marginTop:'50px',fontWeight:'bold'}})]});}export default FanWidget;","map":{"version":3,"names":["React","useEffect","useRef","useState","jsx","_jsx","jsxs","_jsxs","FanWidget","_ref","status","percent","rotation","setRotation","speedRef","requestRef","prevTimeref","statusRef","current","animate","time","deltaTime","prevRotation","requestAnimationFrame","cancelAnimationFrame","className","children","style","transform","width","height","viewBox","cx","cy","r","stroke","strokeWidth","fill","id","d","href","toUpperCase","marginTop","fontWeight"],"sources":["/Users/ratishkumarsaravanan/Desktop/Final-project/front/iot-frontend/iot-frontend/src/FanWidget.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport './FanWidget.css';\n\nfunction FanWidget({ status, percent }) {\n  const [rotation, setRotation] = useState(0);\n  const speedRef = useRef(360); // Full speed in degrees per second\n  const requestRef = useRef();// We use useRef for persisting new values\n  const prevTimeref = useRef();\n  const statusRef = useRef(status);\n\n  // We update statusRef and reset speed when fan turns on.\n  useEffect(() => {\n    statusRef.current = status;\n    if (status === 'on') {\n      speedRef.current = 360;\n    }\n  }, [status]);\n\n  // animation logic\n  const animate = (time) => {\n    if (prevTimeref.current != null) {\n      const deltaTime = time - prevTimeref.current;\n      //We update rotation based on the current speed.\n      setRotation((prevRotation) => (prevRotation + speedRef.current * (deltaTime / 1000)) % 360);\n      \n      // for gradually deceleration when fan turns off when reduce it gradually by a factor of 0.98 and then we make it as 0 when speed is less than 1\n      if (statusRef.current === 'off') {\n        speedRef.current = speedRef.current * 0.98;\n        if (speedRef.current < 1) {\n          speedRef.current = 0;\n        }\n      }\n    }\n    //setting the new times\n    prevTimeref.current = time;\n    requestRef.current = requestAnimationFrame(animate);\n  };\n\n  // Start the animation loop once on initialization.\n  useEffect(() => {\n    requestRef.current = requestAnimationFrame(animate);\n    return () => cancelAnimationFrame(requestRef.current);\n  }, []);\n\n  return (\n    <div className=\"fan-comp\">\n      <h3 className=\"fan-title\">Fan Status</h3>\n      <div className=\"fan-data\">\n        <div\n          className=\"fan\"\n          style={{ transform: `rotate(${rotation}deg)` }}  // for animation\n        >\n          {/* using Salable Vector graphics from xml to do graphics for fan display */}\n          <svg width=\"120\" height=\"120\" viewBox=\"0 0 120 120\">\n            {/* animation for outer circle */}\n            <circle cx=\"60\" cy=\"60\" r=\"55\" stroke=\"#333\" strokeWidth=\"4\" fill=\"none\" />\n            {/* animation for fan blades */}\n            <g fill=\"#ccc\" stroke=\"#333\" strokeWidth=\"1\">\n              {/* blade template formatting*/}\n              <g id=\"blade\">\n                <path d=\"M60,60 L60,20 A20,20 0 0,1 80,40 Z\" />\n              </g>\n              {/* now rotate the blade for  blade wings */}\n              <use href=\"#blade\" transform=\"rotate(0,60,60)\" />\n              <use href=\"#blade\" transform=\"rotate(90,60,60)\" />\n              <use href=\"#blade\" transform=\"rotate(180,60,60)\" />\n              <use href=\"#blade\" transform=\"rotate(270,60,60)\" />\n            </g>\n            {/* Center pole */}\n            <circle cx=\"60\" cy=\"60\" r=\"5\" fill=\"#333\" />\n          </svg>\n        </div>\n        <div className=\"fan-state\">\n          {status.toUpperCase()} \n        </div>\n        <div className=\"fan-percent\">\n          Usage: {percent}%\n        </div>\n      </div>\n      <div style={{ marginTop: '50px', fontWeight: 'bold' }}>\n      </div>\n    </div>\n  );\n}\n\nexport default FanWidget;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,CAAEC,MAAM,CAAEC,QAAQ,KAAQ,OAAO,CAC1D,MAAO,iBAAiB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEzB,QAAS,CAAAC,SAASA,CAAAC,IAAA,CAAsB,IAArB,CAAEC,MAAM,CAAEC,OAAQ,CAAC,CAAAF,IAAA,CACpC,KAAM,CAACG,QAAQ,CAAEC,WAAW,CAAC,CAAGV,QAAQ,CAAC,CAAC,CAAC,CAC3C,KAAM,CAAAW,QAAQ,CAAGZ,MAAM,CAAC,GAAG,CAAC,CAAE;AAC9B,KAAM,CAAAa,UAAU,CAAGb,MAAM,CAAC,CAAC,CAAC;AAC5B,KAAM,CAAAc,WAAW,CAAGd,MAAM,CAAC,CAAC,CAC5B,KAAM,CAAAe,SAAS,CAAGf,MAAM,CAACQ,MAAM,CAAC,CAEhC;AACAT,SAAS,CAAC,IAAM,CACdgB,SAAS,CAACC,OAAO,CAAGR,MAAM,CAC1B,GAAIA,MAAM,GAAK,IAAI,CAAE,CACnBI,QAAQ,CAACI,OAAO,CAAG,GAAG,CACxB,CACF,CAAC,CAAE,CAACR,MAAM,CAAC,CAAC,CAEZ;AACA,KAAM,CAAAS,OAAO,CAAIC,IAAI,EAAK,CACxB,GAAIJ,WAAW,CAACE,OAAO,EAAI,IAAI,CAAE,CAC/B,KAAM,CAAAG,SAAS,CAAGD,IAAI,CAAGJ,WAAW,CAACE,OAAO,CAC5C;AACAL,WAAW,CAAES,YAAY,EAAK,CAACA,YAAY,CAAGR,QAAQ,CAACI,OAAO,EAAIG,SAAS,CAAG,IAAI,CAAC,EAAI,GAAG,CAAC,CAE3F;AACA,GAAIJ,SAAS,CAACC,OAAO,GAAK,KAAK,CAAE,CAC/BJ,QAAQ,CAACI,OAAO,CAAGJ,QAAQ,CAACI,OAAO,CAAG,IAAI,CAC1C,GAAIJ,QAAQ,CAACI,OAAO,CAAG,CAAC,CAAE,CACxBJ,QAAQ,CAACI,OAAO,CAAG,CAAC,CACtB,CACF,CACF,CACA;AACAF,WAAW,CAACE,OAAO,CAAGE,IAAI,CAC1BL,UAAU,CAACG,OAAO,CAAGK,qBAAqB,CAACJ,OAAO,CAAC,CACrD,CAAC,CAED;AACAlB,SAAS,CAAC,IAAM,CACdc,UAAU,CAACG,OAAO,CAAGK,qBAAqB,CAACJ,OAAO,CAAC,CACnD,MAAO,IAAMK,oBAAoB,CAACT,UAAU,CAACG,OAAO,CAAC,CACvD,CAAC,CAAE,EAAE,CAAC,CAEN,mBACEX,KAAA,QAAKkB,SAAS,CAAC,UAAU,CAAAC,QAAA,eACvBrB,IAAA,OAAIoB,SAAS,CAAC,WAAW,CAAAC,QAAA,CAAC,YAAU,CAAI,CAAC,cACzCnB,KAAA,QAAKkB,SAAS,CAAC,UAAU,CAAAC,QAAA,eACvBrB,IAAA,QACEoB,SAAS,CAAC,KAAK,CACfE,KAAK,CAAE,CAAEC,SAAS,CAAE,UAAUhB,QAAQ,MAAO,CAAI;AAAA,CAAAc,QAAA,cAGjDnB,KAAA,QAAKsB,KAAK,CAAC,KAAK,CAACC,MAAM,CAAC,KAAK,CAACC,OAAO,CAAC,aAAa,CAAAL,QAAA,eAEjDrB,IAAA,WAAQ2B,EAAE,CAAC,IAAI,CAACC,EAAE,CAAC,IAAI,CAACC,CAAC,CAAC,IAAI,CAACC,MAAM,CAAC,MAAM,CAACC,WAAW,CAAC,GAAG,CAACC,IAAI,CAAC,MAAM,CAAE,CAAC,cAE3E9B,KAAA,MAAG8B,IAAI,CAAC,MAAM,CAACF,MAAM,CAAC,MAAM,CAACC,WAAW,CAAC,GAAG,CAAAV,QAAA,eAE1CrB,IAAA,MAAGiC,EAAE,CAAC,OAAO,CAAAZ,QAAA,cACXrB,IAAA,SAAMkC,CAAC,CAAC,oCAAoC,CAAE,CAAC,CAC9C,CAAC,cAEJlC,IAAA,QAAKmC,IAAI,CAAC,QAAQ,CAACZ,SAAS,CAAC,iBAAiB,CAAE,CAAC,cACjDvB,IAAA,QAAKmC,IAAI,CAAC,QAAQ,CAACZ,SAAS,CAAC,kBAAkB,CAAE,CAAC,cAClDvB,IAAA,QAAKmC,IAAI,CAAC,QAAQ,CAACZ,SAAS,CAAC,mBAAmB,CAAE,CAAC,cACnDvB,IAAA,QAAKmC,IAAI,CAAC,QAAQ,CAACZ,SAAS,CAAC,mBAAmB,CAAE,CAAC,EAClD,CAAC,cAEJvB,IAAA,WAAQ2B,EAAE,CAAC,IAAI,CAACC,EAAE,CAAC,IAAI,CAACC,CAAC,CAAC,GAAG,CAACG,IAAI,CAAC,MAAM,CAAE,CAAC,EACzC,CAAC,CACH,CAAC,cACNhC,IAAA,QAAKoB,SAAS,CAAC,WAAW,CAAAC,QAAA,CACvBhB,MAAM,CAAC+B,WAAW,CAAC,CAAC,CAClB,CAAC,cACNlC,KAAA,QAAKkB,SAAS,CAAC,aAAa,CAAAC,QAAA,EAAC,SACpB,CAACf,OAAO,CAAC,GAClB,EAAK,CAAC,EACH,CAAC,cACNN,IAAA,QAAKsB,KAAK,CAAE,CAAEe,SAAS,CAAE,MAAM,CAAEC,UAAU,CAAE,MAAO,CAAE,CACjD,CAAC,EACH,CAAC,CAEV,CAEA,cAAe,CAAAnC,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}