{"ast":null,"code":"import React,{useEffect,useState}from'react';import{Line}from'react-chartjs-2';import socketIOClient from'socket.io-client';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const endpoint=process.env.REACT_APP_API_URL||\"http://localhost:3000\";function FanChart(){// here we load initial chart data from localStorage\nconst[c,setChart]=useState(()=>{const s=localStorage.getItem('fanChartData');return s?JSON.parse(s):{labels:[],datasets:[{label:'Fan State (On=1, Off=0)',data:[],fill:false,backgroundColor:'purple',borderColor:'purple'}]};});useEffect(()=>{//initiating socket connection to fan topic and checking on/off\nconst socket=socketIOClient(endpoint,{transports:[\"websocket\"]});socket.on('mqtt_message',data=>{if(data.topic==='sensors/fan'){try{const dataObj=JSON.parse(data.message);const state=dataObj.status;const refState=state==='on'?1:0;// changing on/off to 1/0\nconst cTime=new Date().toLocaleTimeString();setChart(prevData=>{const newLabels=prevData.labels.concat(cTime);const newData=prevData.datasets[0].data.concat(refState);// Keeping  only the last 10 data points      \nif(newLabels.length>10){newLabels.splice(0,newLabels.length-10);newData.splice(0,newData.length-10);}// Maintain a new object to overide the new data into chart data\nconst charts={labels:newLabels,datasets:[Object.assign({},prevData.datasets[0],{data:newData})]};localStorage.setItem('fanChartData',JSON.stringify(charts));return charts;});}catch(error){console.error(\"Error parsing fan state data\",error);}}});return()=>socket.disconnect();},[]);return/*#__PURE__*/_jsxs(\"div\",{style:{width:'100%',maxWidth:'600px'},children:[/*#__PURE__*/_jsx(\"h5\",{children:\"Fan State vs. Time\"}),/*#__PURE__*/_jsx(Line,{data:c})]});}export default FanChart;","map":{"version":3,"names":["React","useEffect","useState","Line","socketIOClient","jsx","_jsx","jsxs","_jsxs","endpoint","process","env","REACT_APP_API_URL","FanChart","c","setChart","s","localStorage","getItem","JSON","parse","labels","datasets","label","data","fill","backgroundColor","borderColor","socket","transports","on","topic","dataObj","message","state","status","refState","cTime","Date","toLocaleTimeString","prevData","newLabels","concat","newData","length","splice","charts","Object","assign","setItem","stringify","error","console","disconnect","style","width","maxWidth","children"],"sources":["/Users/ratishkumarsaravanan/Desktop/Final-project/front/iot-frontend/iot-frontend/src/FanChart.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport socketIOClient from 'socket.io-client';\n\nconst endpoint = process.env.REACT_APP_API_URL || \"http://localhost:3000\";\n\nfunction FanChart() {\n  // here we load initial chart data from localStorage\n  const [c, setChart] = useState(() => {\n    const s = localStorage.getItem('fanChartData');\n    return s ? JSON.parse(s) : {\n      labels: [],\n      datasets: [{\n        label: 'Fan State (On=1, Off=0)',\n        data: [],\n        fill: false,\n        backgroundColor: 'purple',\n        borderColor: 'purple',\n      }]\n    };\n  });\n\n  useEffect(() => {\n    //initiating socket connection to fan topic and checking on/off\n    const socket = socketIOClient(endpoint, { transports: [\"websocket\"] });\n    socket.on('mqtt_message', (data) => {\n      if (data.topic === 'sensors/fan') {\n        try {\n          const dataObj = JSON.parse(data.message);\n          const state = dataObj.status;\n          const refState = state === 'on' ? 1 : 0;// changing on/off to 1/0\n          const cTime = new Date().toLocaleTimeString();\n          setChart(prevData => {\n            const newLabels = prevData.labels.concat(cTime);\n            const newData = prevData.datasets[0].data.concat(refState);\n            // Keeping  only the last 10 data points      \n            if (newLabels.length > 10) {\n              newLabels.splice(0, newLabels.length - 10);\n              newData.splice(0, newData.length - 10);\n            }\n\n            // Maintain a new object to overide the new data into chart data\n            const charts = {\n              labels: newLabels,\n              datasets: [\n                Object.assign({}, prevData.datasets[0], { data: newData })\n              ]\n            };\n            localStorage.setItem('fanChartData', JSON.stringify(charts));\n            return charts;\n          });\n        } catch (error) {\n          console.error(\"Error parsing fan state data\", error);\n        }\n      }\n    });\n\n    return () => socket.disconnect();\n  }, []);\n\n  return (\n    <div style={{ width: '100%', maxWidth: '600px' }}>\n      <h5>Fan State vs. Time</h5>\n      <Line data={c} />\n    </div>\n  );\n}\n\nexport default FanChart;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}